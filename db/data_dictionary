"""READ ME!!!!!

1. All INT's, TINYINT's, or other numbers that aren't dates are unsigned, 
	with the exception of the strength value in evidence and hunch
2. All tables have a default id named id that is declared by Django
3. Any Cross Tables shown in the Database diagram that have only the id's as
	values are tables that are not declared in our program, but handled by Django
	instead through ManyToMany values. They are in the database for visualization
	purposes only.
4. This file follows the same declaration order as the models.py file to simplify
	things. 
"""

auth_user (not actually declared, but imported)
	"""This is the Django built in user table for authenitaction"""
	id = primary key, auto increment
	username = unique, the username of the user
	password = must be encrypted in database or authentication fails, the
		password associated with the username used to login.
	first_name = the first name of the user (will always be blank, using 
		user_profile instead)
	last_name = the last name of the user (will always be blank, using 
		user_profile instead)
	email = the email of the user (will always be blank, using user_profile 
		instead)
	is_staff = boolean, true if they are staff
	is_active = boolean, true if the user is active
	is_superuser = boolean, true if the user is admin
	last_login = datetime, date of last login into the system, down to 
		microseconds
	date_joined = datetime, date of user being created down to microseconds

user_profile
	"""This represents a user that has registered in Hunchworks and has an
		account"""	
	user_id = the id of the auth.user table that this profile is assocaited with
	title = Enum of ints representing Mr, Mrs, Ms.
	name = name of the user (not seperated because first/last is only common in US)
	email = email of the user
	show_profile_reminder = boolean, do they want to be reminded of finishing their
		profile
	privacy = Int Enum of Hidden, Closed, Open.
	bio_text = A user description of themselves
	phone = A string of the user's phone #
	skype_name = Skype username
	website = website URL to the user's website
	profile_picture = a local system location of the profile picture of the user
	screen_name = Screen Name of a messenger client
	messenger_service = Int Enum of messenger clients
	translation_language_id = the id of the translation language table it is
		associated with 
	invitation_id = The invitiation_id that this user was created from

connection
	"""This represents a cross table between user and user. """
	user_profile       = the user_profile it is assocaiated with
	other_user_profile = the user_profile it is assocaiated with
	status             = Accepted, Invited, Blocked

hunch
	"""This represents a hunch posted by a user about something they think might
		be going on in the world"""
	creator_id = the id of the user_profile that created this hunch
	time_created = the specific time the evidence was created (down to seconds)
	time_modified = the specific time the evidence was modified (down to seconds)
	status = can be undetermined, confirmed, or denied, default is undetermined
	title = The title of the Hunch, 100 characters max, so it can be tweeted
	privacy = Can be Open, Closed, or hidden. Open is viewable and joinable
		by anyone, closed is viewable by anyone but not joinable, hidden is
		not viewable or joinable by anyone except through invites.
	translation_language_id = the id of the translation language that the hunch is
		written in.
	location_id = the id of the location that the hunch is talking about
	description = the text that can be put as a comment in reference to the hunch,
		users may also use this as a possible explanation of the attachments they
		are posting.

hunch_user
	"""This represents a cross table between hunch and user as a hunch can have
		multiple users working on it, and a user can work on multiple hunches"""
	hunch_id = the id of the hunch it is associated with it.
	user_profile_id = the id of the user_profile it is associated with
	status = Accepted, invited, blocked

evidence
	"""This represents a table of comments that will be posted to a hunch. Each
		comment can have some text associated with it as well as many attachments
		of videos, pictures, documents, etc."""
	strength = the strength of the evidence posted, values from -2 to 2, relating
		to string values of strongly refutes to strongly supports. 
	time_created = the specific time the evidence was created (down to seconds)
	time_modified = the specific time the evidence was modified (down to seconds)
	description = the text that can be put as a comment in reference to the hunch,
		users may also use this as a possible explanation of the attachments they
		are posting.
	creator_id = the id of the user that created the evidence

group
	"""This represents a group created by an organization or users within
		hunchworks and will have one or more users in it"""
	name = the name of the group, unique
	abbreviation = a short abbreviation of the group, can be null
	logo = the file locoation of the group picture.
	type = Can be Ad-Hoc, Alumni, Complement, Corporate, Interest, 
		Non-Profit. This is stored in hunchworks_enums.py file
	privacy = Can be Open, Closed, or hidden. Open is viewable and joinable
		by anyone, closed is viewable by anyone but not joinable, hidden is
		not viewable or joinable by anyone except through invites.
	location_id = the id of the location it is associated with.

user_profile_group
	"""This represents a cross table between group and user. Groups
		will have mutliple users and a user will be a part of multiple groups.
		Users will be able to connect, trust, and share information with multiple
		users. """
	user_profile_id = the id of the user_profil that its associated with
	group_id = the id of the group that its associated with
	status = Accepted, invited, blocked

attachment
	"""This represents a table that will store the location and type of
		attachment that is attached"""
	type = Int representing a video, picture, text, etc.
	file_location = location of the file on the server to be retrieved.

album
	"""This represents a collection of pictures and possibly videos as well
		that can be stored into an album instead of indivulally putting each 
		picture or video as an attachment"""
	name = the name of the album

education
	"""This represents a table storing a user's college or university background"""
	school = the name of the school the education was at
	qualification = the degree being obtained or obtained already
	start_date = the date the qualification was started
	end_date = the date the qualification ended, can be null as may still be there

course
	"""This represents a table that will store courses that the user has taken
		that may not be associated with any particular degree or college, such
		as bomb squad training"""
	name = the name of the course taken
	start_date = the starting date of the class
	end_date = the ending date of the class, can be null as you may still be
		taking the class

translation_language
	"""This table represents all languages that HunchWorks will translate into
		that users and Hunches will be able to pick from. Only languages in this
		table will be supported for translation."""
	name = the name of the language for translation purposes

location
	"""This represents all possible locations in the world as there can only be a
		finite amount of locations."""
	name = the name of the location

tag
	"""This represents a table of tags that you can add to Hunches and Evidence"""
	name = models.CharField(max_length=40)

role
	"""This represents a users work history"""
	group_id = the id of the group it is associated with
	title = the title of the job that the user had
	start_date = the start date of the work
	end_date = the end date of the work, can be null since users may still be
		working there
	description = the description of the work that the user did at this job.

skill
	"""This represents skills and expertise the user may posess, which also
		include languages known"""
	skill_id = primary key, auto increment
	skill = the name of the skill
	is_language = boolean of whether the skill is a language or not
	is_technical = boolean of whether the skill is technical or not
	name = models.CharField(unique=True, max_length=100)
	
language
	"""This represents languages spoken or known by the user"""
	name = the name of the language

invitation
	"""This table represents the master list of all people in hunchworks and all
		people that have been invited by users of hunchworks."""
	invited_by_id = the id of the user that has invited this email.
	email = the email of the invited user, not unique
	invited_by = the user_profile that invited this user
	hunch_id = A Hunch that this invite is associated with