/*= global/nav.scss */

/* This constant is completely arbitrary. It looks good, but probably won't if
|* the base $font-size or $line-height is changed. */
$nav-spacing: 3px;


nav.site,
nav.user {
  ul {
    @include clear-floats;
    padding: $nav-spacing;
  }

  li {
    float: left;
    margin-right: $nav-spacing;
    @include border-radius($nav-spacing);

    /* Reserve space for the active/hover border, to avoid jittering. */
    padding: $pinstripe-width;
    
    &:last-child {
      margin-right: 0;
    }

    &.active, &:not(.active):hover {
      border: $pinstripe;
      padding: 0;
    }

    &:not(.active):hover {
      background: #f8f8f8;
    }

    &.active {
      background: #fff;
      color: #000;
    }
  }

  a {
    display: block;
    text-decoration: none;
    color: #666;
  }
}


nav.site {
  line-height: ($line-height * 2) - (($pinstripe-width * 3) + ($nav-spacing * 2));
  font-size: $font-size * 0.95;
  position: relative;

  ul {
    @include vertical-gradient(#eee, #ccc);
    border-bottom: $pinstripe-width $pinstripe-style #aaa;
  }

  ul.secondary {
    position: absolute;
    top: 0;
    right: 0;
  }

  a {
    padding: 0 ($nav-spacing * 2);
  }
}


nav.user {
  line-height: ($line-height * 1.5) - (($pinstripe-width * 3) + ($nav-spacing * 2));
  font-size: $font-size * 0.75;

  /* Align the right edge of the user nav with the right edge of the #wrapper.
  |* This is a bit hokey, but avoids having to pos:rel the parent elements. */
  position: absolute;
  top: 0;
  right: 50%;
  margin-right: -(($max-width/2) - ($pinstripe-width * 2));

  ul {
    @include vertical-gradient(#fff, #ddd);
    border-left: $pinstripe-width $pinstripe-style #ccc;
    border-bottom: $pinstripe-width $pinstripe-style #ccc;
    
    /* Set the center of the rounded corner to the same point as the first list
    |* item. Subtracting a single pixel looks better. I'm not sure why, but it's
    |* probably because $nav-spacing is odd, while ($nav-spacing*2) is even. */
    border-bottom-left-radius: ($nav-spacing * 2) - 1px;
  }

  a {
    padding: 0 $nav-spacing;
  }
}


nav.tabs {
  height: ($line-height * 1.5) + ($pinstripe-width);
  margin-top: 0 - $pinstripe-width;
  border-bottom: 1px solid #ccc;

  li {
    @include border-radius($nav-spacing $nav-spacing 0 0);
    display: block;
    float: left;
    background: #fff;
    border: $pinstripe-width solid #bbb;
    margin-right: $spacing/2;

    a {
      display: block;
      line-height: ($line-height * 1.5) - $pinstripe-width;
      padding: 0 ($spacing/2);
      text-decoration: none;
      color: #999;

      span {
        background: #eee;
        padding: 0 0.25em;
        color: #a8a8a8;
      }
    }

    &.active {
      border-bottom-color: #fff;

      a {
        color: inherit;
      }
    }
  }
}
